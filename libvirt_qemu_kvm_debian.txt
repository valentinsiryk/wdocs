=============================
libvirt + QEMU + KVM + Debian
=============================

Check cpu virtualization access::

    # sudo virt-host-validate

    egrep -c '(vmx|svm)' /proc/cpuinfo
    
    sudo apt-get install cpu-checker
    sudo kvm-ok


Check Debian source list ``sources.list``::

    deb http://ftp.de.debian.org/debian jessie main non-free
    deb-src http://ftp.de.debian.org/debian jessie main non-free



qemu-system-x86_64
------------------

Show supported machines types::

    qemu-system-x86_64 -machine help
    

Networking - http://wiki.qemu.org/Documentation/Networking


qemu-img
--------

Images and snapshots - http://azertech.net/content/kvm-qemu-qcow2-qemu-img-and-snapshots

``qemu-img`` tool::

    # Show information (size, backing files, snapshots)
    qemu-img info <image.qcow2>

    # Create a simple QCOW2 image file
    qemu-img create -f qcow2 <image.qcow2> <max_capacity_in_gigabytes>g 

    # Create a QCOW2 image linked with base image
    qemu-img create -b <base_image> -f qcow2 -l <new_image> 

    # List snapshots
    qemu-img snapshot -l <imagename> 
     
    # Create snapshot
    qemu-img snapshot -c <snapshot-name> <imagename> 

    # Apply snapshot
    qemu-img snapshot -a <snapshot-name> <imagename>  

    # Delete snapshot
    qemu-img snapshot -d <snapshot-name> <imagename> 

    # Clone image
    qemu-img convert -p -f qcow2 <source_image> -O qcow2 <dest_image> 



Nested virtualization
---------------------

Check is enabled::

    cat /sys/module/kvm_intel/parameters/nested
    # Y or N


Enable nested module on host
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

::

    sudo sh -c "echo 'options kvm-intel nested=Y' > /etc/modprobe.d/kvm-intel.conf"
    
    # reboot or reload the kernel module
    modprobe -r kvm_intel
    modprobe kvm_intel


Configuration in virt-manager
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Make sure your VM is shut down. Open virt-manager, go to the VM details page for that VM. Click on the Processor page. In the Configuration section, there are two options - either type host-passthrough into to Model field or enable Copy host CPU configuration checkbox (that fills host-model value into the Model field). Click Apply. The difference between those two values is complicated, some details are in bug 1055002. For nested virt, you'll probably want to use host-passthrough until issues with host-model are worked out. Be aware though, that host-passthrough is not recommended for general usage, just for nested virt purposes.





Install KVM, libvirt
--------------------

::
    
    sudo apt-get update
    sudo apt-get install qemu-kvm libvirt-bin qemu-utils
    # adduser root libvirt
    # adduser lee libvirt

::

    /etc/libvirt/         # configs
    /etc/libvirt/storage/ # storage configs
    /var/lib/libvirt/     # images, snapshots, etc.


Libvirt
-------

``Domain.xml``::

    # Port forwarding to machine::

    <domain type='kvm' xmlns:qemu='http://libvirt.org/schemas/domain/qemu/1.0'>
    ...
    <interface type='network'> -> <interface type='user'>
    ...    
    <qemu:commandline>
       <qemu:arg value='-redir'/>
       <qemu:arg value='tcp:2222::22'/>
    </qemu:commandline>
    
    # Custom loader::

    <os>
        <loader readonly='yes' type='pflash'>/path_to/OVMF_CODE-pure-efi.fd</loader>
        <nvram>/path_to/fedora22_VARS.fd</nvram>
    </os>
        


Virsh CMD
---------

::

    # enter in virsh session
    virsh
	    help		# список всех команд

	    pool-list --all # список хранилищ (storages)
	    pool-list	# список активных хранилищ (storages)

	    pool-define-as name_of_storage dir --target /etc/libvirt/images/	# создаем хранилище
	    pool-autostart name_of_storage	# делаем, чтобы пул запускадся автоматически
	    pool-start name_of_storage	# стартуем пул


    # define domain from XML (without run)
    virsh define <file.xml>
        
    # undefine domain from XML
    virsh undefine <domain>
    virsh undefine --nvram <domain> # remove nvram
             
    # show domains list
	virsh list          # run domains
	virsh list --all    # all domains	    

    # generate xml from domain
	virsh dumpxml <domain> > <domain>.xml 

    # create domain and start VM
	virsh create <config.xml>

    # remove domain and stop VM
	virsh destroy alice

    # shutdown VM
	virsh shutdown <domain>

    # suspend/resume VM
	virsh suspend alice
	virsh resume alice

    # add domain to autostart on host run
	virsh autostart <domain>

    # get domain info
	virsh dominfo <domain>
		
	# Edit domain xml
    virsh edit DOMAIN





Bridge configuration
--------------------

::

    sudo apt-get update
    sudo apt-get dist-upgrade

    # install drivers
    sudo apt-get install firmware-realtek firmware-linux		

    sudo apt-get install bridge-utils

    nano /etc/sysctl.conf
	    net.ipv4.ip_forward=1

    Create bridge::

        sudo brctl addbr br0


Network configuration ``/etc/network/interfaces``::

	auto lo
	iface lo inet loopback

	auto eth1
	iface eth1 inet manual

	auto br0
	iface br0 inet static
		address <host_ip>
		netmask <mask>
		gateway <ip>
		dns-nameservers <ip1> <ip2>
		bridge_ports eth1
		bridge_stp off
		bridge_fd 0
		bridge_maxwait 0
		
		
Restart and check network configuration::

    sudo /etc/init.d/networking restart
    ifconfig


Show bridges::

    brctl show




Virt-manager
------------

Install latest version::

    sudo wget -q -O - http://archive.getdeb.net/getdeb-archive.key | sudo apt-key add -
    sudo sh -c 'echo "deb http://archive.getdeb.net/ubuntu wily-getdeb apps" >> /etc/apt/sources.list.d/getdeb.list'
    sudo apt-get update && sudo apt-get dist-upgrade
    apt-get install virt-manager

    # config file virt-manager
    ~/.gconf/apps/virt-manager/



